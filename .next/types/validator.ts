// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/[locale]/admin/ai-tasks/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[locale]/admin/ai-tasks">> = Specific
  const handler = {} as typeof import("../../app/[locale]/admin/ai-tasks/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/[locale]/admin/jobs/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[locale]/admin/jobs">> = Specific
  const handler = {} as typeof import("../../app/[locale]/admin/jobs/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/[locale]/admin/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[locale]/admin">> = Specific
  const handler = {} as typeof import("../../app/[locale]/admin/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/[locale]/admin/scraper/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[locale]/admin/scraper">> = Specific
  const handler = {} as typeof import("../../app/[locale]/admin/scraper/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/[locale]/admin/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[locale]/admin/settings">> = Specific
  const handler = {} as typeof import("../../app/[locale]/admin/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/[locale]/admin/users/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[locale]/admin/users">> = Specific
  const handler = {} as typeof import("../../app/[locale]/admin/users/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/[locale]/contact/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[locale]/contact">> = Specific
  const handler = {} as typeof import("../../app/[locale]/contact/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/[locale]/evaluare-cv/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[locale]/evaluare-cv">> = Specific
  const handler = {} as typeof import("../../app/[locale]/evaluare-cv/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/[locale]/ghid-europa/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[locale]/ghid-europa">> = Specific
  const handler = {} as typeof import("../../app/[locale]/ghid-europa/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/[locale]/learn/danish/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[locale]/learn/danish">> = Specific
  const handler = {} as typeof import("../../app/[locale]/learn/danish/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/[locale]/locuri-verificate/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[locale]/locuri-verificate">> = Specific
  const handler = {} as typeof import("../../app/[locale]/locuri-verificate/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/[locale]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/[locale]">> = Specific
  const handler = {} as typeof import("../../app/[locale]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/analytics/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/analytics">> = Specific
  const handler = {} as typeof import("../../app/admin/analytics/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/jobs/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/jobs">> = Specific
  const handler = {} as typeof import("../../app/admin/jobs/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/logs/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/logs">> = Specific
  const handler = {} as typeof import("../../app/admin/logs/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin">> = Specific
  const handler = {} as typeof import("../../app/admin/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/scraper/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/scraper">> = Specific
  const handler = {} as typeof import("../../app/admin/scraper/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/users/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/users">> = Specific
  const handler = {} as typeof import("../../app/admin/users/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/agency/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/agency">> = Specific
  const handler = {} as typeof import("../../app/agency/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/contact/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contact">> = Specific
  const handler = {} as typeof import("../../app/contact/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/ai-tasks/process/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/ai-tasks/process">> = Specific
  const handler = {} as typeof import("../../app/api/admin/ai-tasks/process/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/analytics/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/analytics">> = Specific
  const handler = {} as typeof import("../../app/api/admin/analytics/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/jobs/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/jobs">> = Specific
  const handler = {} as typeof import("../../app/api/admin/jobs/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/logs/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/logs">> = Specific
  const handler = {} as typeof import("../../app/api/admin/logs/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/scraper/jobs/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/scraper/jobs">> = Specific
  const handler = {} as typeof import("../../app/api/admin/scraper/jobs/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/scraper/start/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/scraper/start">> = Specific
  const handler = {} as typeof import("../../app/api/admin/scraper/start/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/settings/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/settings">> = Specific
  const handler = {} as typeof import("../../app/api/admin/settings/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/stats/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/stats">> = Specific
  const handler = {} as typeof import("../../app/api/admin/stats/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/users/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/users">> = Specific
  const handler = {} as typeof import("../../app/api/admin/users/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/agency/clients/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agency/clients">> = Specific
  const handler = {} as typeof import("../../app/api/agency/clients/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/agency/dashboard/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agency/dashboard">> = Specific
  const handler = {} as typeof import("../../app/api/agency/dashboard/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/agency/leads/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agency/leads">> = Specific
  const handler = {} as typeof import("../../app/api/agency/leads/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/agency/placements/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/agency/placements">> = Specific
  const handler = {} as typeof import("../../app/api/agency/placements/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/ai/lead-scoring/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/ai/lead-scoring">> = Specific
  const handler = {} as typeof import("../../app/api/ai/lead-scoring/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/ai/smart-match/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/ai/smart-match">> = Specific
  const handler = {} as typeof import("../../app/api/ai/smart-match/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/[...nextauth]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/[...nextauth]">> = Specific
  const handler = {} as typeof import("../../app/api/auth/[...nextauth]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/chat/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/chat">> = Specific
  const handler = {} as typeof import("../../app/api/chat/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/contact/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/contact">> = Specific
  const handler = {} as typeof import("../../app/api/contact/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/flashcards/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/flashcards">> = Specific
  const handler = {} as typeof import("../../app/api/flashcards/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/n8n-automation/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/n8n-automation">> = Specific
  const handler = {} as typeof import("../../app/api/n8n-automation/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/outreach/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/outreach">> = Specific
  const handler = {} as typeof import("../../app/api/outreach/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/scrape-danish-farms/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/scrape-danish-farms">> = Specific
  const handler = {} as typeof import("../../app/api/scrape-danish-farms/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/signup/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/signup">> = Specific
  const handler = {} as typeof import("../../app/api/signup/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
