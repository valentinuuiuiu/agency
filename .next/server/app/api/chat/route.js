/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/chat/route";
exports.ids = ["app/api/chat/route"];
exports.modules = {

/***/ "(rsc)/./app/api/chat/route.ts":
/*!*******************************!*\
  !*** ./app/api/chat/route.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_ai_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/ai-service */ \"(rsc)/./lib/ai-service.ts\");\n\n\nasync function POST(request) {\n    try {\n        const { prompt } = await request.json();\n        if (!prompt) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Prompt is required'\n            }, {\n                status: 400\n            });\n        }\n        const aiService = _lib_ai_service__WEBPACK_IMPORTED_MODULE_1__.AIService.getInstance();\n        const aiResponse = await aiService.generateResponse(prompt);\n        if (aiResponse.success) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                content: aiResponse.content\n            });\n        } else {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: aiResponse.error || 'AI service error'\n            }, {\n                status: 500\n            });\n        }\n    } catch (error) {\n        console.error('Chat API error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2NoYXQvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXVEO0FBQ1g7QUFFckMsZUFBZUUsS0FBS0MsT0FBb0I7SUFDN0MsSUFBSTtRQUNGLE1BQU0sRUFBRUMsTUFBTSxFQUFFLEdBQUcsTUFBTUQsUUFBUUUsSUFBSTtRQUVyQyxJQUFJLENBQUNELFFBQVE7WUFDWCxPQUFPSixxREFBWUEsQ0FBQ0ssSUFBSSxDQUFDO2dCQUFFQyxPQUFPO1lBQXFCLEdBQUc7Z0JBQUVDLFFBQVE7WUFBSTtRQUMxRTtRQUVBLE1BQU1DLFlBQVlQLHNEQUFTQSxDQUFDUSxXQUFXO1FBQ3ZDLE1BQU1DLGFBQWEsTUFBTUYsVUFBVUcsZ0JBQWdCLENBQUNQO1FBRXBELElBQUlNLFdBQVdFLE9BQU8sRUFBRTtZQUN0QixPQUFPWixxREFBWUEsQ0FBQ0ssSUFBSSxDQUFDO2dCQUFFUSxTQUFTSCxXQUFXRyxPQUFPO1lBQUM7UUFDekQsT0FBTztZQUNMLE9BQU9iLHFEQUFZQSxDQUFDSyxJQUFJLENBQUM7Z0JBQUVDLE9BQU9JLFdBQVdKLEtBQUssSUFBSTtZQUFtQixHQUFHO2dCQUFFQyxRQUFRO1lBQUk7UUFDNUY7SUFDRixFQUFFLE9BQU9ELE9BQU87UUFDZFEsUUFBUVIsS0FBSyxDQUFDLG1CQUFtQkE7UUFDakMsT0FBT04scURBQVlBLENBQUNLLElBQUksQ0FBQztZQUFFQyxPQUFPO1FBQXdCLEdBQUc7WUFBRUMsUUFBUTtRQUFJO0lBQzdFO0FBQ0YiLCJzb3VyY2VzIjpbIi9ob21lL3NoaXZhL0RvY3VtZW50cy9yb21hbmlhbl9kYW5pc2hfam9icy9hcHAvYXBpL2NoYXQvcm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJ1xuaW1wb3J0IHsgQUlTZXJ2aWNlIH0gZnJvbSAnQC9saWIvYWktc2VydmljZSdcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHByb21wdCB9ID0gYXdhaXQgcmVxdWVzdC5qc29uKClcblxuICAgIGlmICghcHJvbXB0KSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogJ1Byb21wdCBpcyByZXF1aXJlZCcgfSwgeyBzdGF0dXM6IDQwMCB9KVxuICAgIH1cblxuICAgIGNvbnN0IGFpU2VydmljZSA9IEFJU2VydmljZS5nZXRJbnN0YW5jZSgpXG4gICAgY29uc3QgYWlSZXNwb25zZSA9IGF3YWl0IGFpU2VydmljZS5nZW5lcmF0ZVJlc3BvbnNlKHByb21wdClcblxuICAgIGlmIChhaVJlc3BvbnNlLnN1Y2Nlc3MpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGNvbnRlbnQ6IGFpUmVzcG9uc2UuY29udGVudCB9KVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogYWlSZXNwb25zZS5lcnJvciB8fCAnQUkgc2VydmljZSBlcnJvcicgfSwgeyBzdGF0dXM6IDUwMCB9KVxuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdDaGF0IEFQSSBlcnJvcjonLCBlcnJvcilcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogJ0ludGVybmFsIHNlcnZlciBlcnJvcicgfSwgeyBzdGF0dXM6IDUwMCB9KVxuICB9XG59XG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiQUlTZXJ2aWNlIiwiUE9TVCIsInJlcXVlc3QiLCJwcm9tcHQiLCJqc29uIiwiZXJyb3IiLCJzdGF0dXMiLCJhaVNlcnZpY2UiLCJnZXRJbnN0YW5jZSIsImFpUmVzcG9uc2UiLCJnZW5lcmF0ZVJlc3BvbnNlIiwic3VjY2VzcyIsImNvbnRlbnQiLCJjb25zb2xlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/chat/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/ai-service.ts":
/*!***************************!*\
  !*** ./lib/ai-service.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AIService: () => (/* binding */ AIService)\n/* harmony export */ });\nclass AIService {\n    constructor(){\n        // European countries data for matching\n        this.europeanMarkets = {\n            denmark: {\n                currency: 'DKK',\n                workingHours: 37,\n                minWage: 110,\n                vacationDays: 25,\n                visaRequired: false,\n                languageImportance: 'high'\n            },\n            germany: {\n                currency: 'EUR',\n                workingHours: 40,\n                minWage: 12,\n                vacationDays: 25,\n                visaRequired: false,\n                languageImportance: 'medium'\n            },\n            netherlands: {\n                currency: 'EUR',\n                workingHours: 40,\n                minWage: 9.33,\n                vacationDays: 25,\n                visaRequired: false,\n                languageImportance: 'medium'\n            },\n            france: {\n                currency: 'EUR',\n                workingHours: 35,\n                minWage: 11.65,\n                vacationDays: 25,\n                visaRequired: false,\n                languageImportance: 'medium'\n            }\n        };\n        // All job industries offered by the agency\n        this.jobIndustries = {\n            agriculture: {\n                name: 'Agriculture & Farming',\n                specialties: [\n                    'crop farming',\n                    'livestock',\n                    'greenhouse',\n                    'horticulture',\n                    'poultry'\n                ],\n                skills: [\n                    'tractor operation',\n                    'machinery repair',\n                    'crop management'\n                ],\n                salaryRange: {\n                    min: 2000,\n                    max: 3500,\n                    currency: 'EUR'\n                }\n            },\n            construction: {\n                name: 'Construction & Building',\n                specialties: [\n                    'general labor',\n                    'skilled trades',\n                    'project management',\n                    'steel work',\n                    'concrete'\n                ],\n                skills: [\n                    'heavy machinery',\n                    'welding',\n                    'electrical',\n                    'plumbing',\n                    'carpentry'\n                ],\n                salaryRange: {\n                    min: 2200,\n                    max: 4500,\n                    currency: 'EUR'\n                }\n            },\n            manufacturing: {\n                name: 'Manufacturing & Industry',\n                specialties: [\n                    'assembly line',\n                    'quality control',\n                    'machine operation',\n                    'packaging',\n                    'maintenance'\n                ],\n                skills: [\n                    'production',\n                    'safety procedures',\n                    'inventory management'\n                ],\n                salaryRange: {\n                    min: 1800,\n                    max: 3800,\n                    currency: 'EUR'\n                }\n            },\n            logistics: {\n                name: 'Logistics & Warehousing',\n                specialties: [\n                    'warehouse work',\n                    'forklift operation',\n                    'inventory',\n                    'order picking',\n                    'shipping'\n                ],\n                skills: [\n                    'warehouse management',\n                    'inventory software',\n                    'safety regulations'\n                ],\n                salaryRange: {\n                    min: 1600,\n                    max: 3200,\n                    currency: 'EUR'\n                }\n            },\n            it: {\n                name: 'IT & Technology',\n                specialties: [\n                    'software development',\n                    'IT support',\n                    'data entry',\n                    'system administration',\n                    'networking'\n                ],\n                skills: [\n                    'programming languages',\n                    'database management',\n                    'IT security',\n                    'troubleshooting'\n                ],\n                salaryRange: {\n                    min: 2500,\n                    max: 5500,\n                    currency: 'EUR'\n                }\n            },\n            hospitality: {\n                name: 'Hospitality & Services',\n                specialties: [\n                    'hotel work',\n                    'restaurant service',\n                    'cleaning',\n                    'housekeeping',\n                    'tourism'\n                ],\n                skills: [\n                    'customer service',\n                    'languages',\n                    'food safety'\n                ],\n                salaryRange: {\n                    min: 1400,\n                    max: 2800,\n                    currency: 'EUR'\n                }\n            },\n            healthcare: {\n                name: 'Healthcare & Care',\n                specialties: [\n                    'elder care',\n                    'medical assistance',\n                    'pharmacy',\n                    'therapy support',\n                    'cleaning'\n                ],\n                skills: [\n                    'patient care',\n                    'medical procedures',\n                    'hygiene standards'\n                ],\n                salaryRange: {\n                    min: 1800,\n                    max: 3600,\n                    currency: 'EUR'\n                }\n            },\n            retail: {\n                name: 'Retail & Sales',\n                specialties: [\n                    'store work',\n                    'customer service',\n                    'stock management',\n                    'cashier',\n                    'sales'\n                ],\n                skills: [\n                    'customer interaction',\n                    'cash handling',\n                    'product knowledge'\n                ],\n                salaryRange: {\n                    min: 1300,\n                    max: 2600,\n                    currency: 'EUR'\n                }\n            },\n            transportation: {\n                name: 'Transportation & Driving',\n                specialties: [\n                    'truck driving',\n                    'bus driving',\n                    'delivery',\n                    'warehouse transport',\n                    'logistics'\n                ],\n                skills: [\n                    'driving licenses',\n                    'route planning',\n                    'safety protocols'\n                ],\n                salaryRange: {\n                    min: 2000,\n                    max: 4000,\n                    currency: 'EUR'\n                }\n            },\n            forestry: {\n                name: 'Forestry & Environment',\n                specialties: [\n                    'tree felling',\n                    'forest management',\n                    'park maintenance',\n                    'reforestation',\n                    'equipment operation'\n                ],\n                skills: [\n                    'chainsaw operation',\n                    'safety equipment',\n                    'environmental regulations'\n                ],\n                salaryRange: {\n                    min: 2300,\n                    max: 4200,\n                    currency: 'EUR'\n                }\n            }\n        };\n        this.apiKey = process.env.OPENROUTER_API_KEY || '';\n        this.model = process.env.OPENROUTER_MODEL || 'google/gemini-2.5-flash-lite';\n    }\n    static getInstance() {\n        if (!AIService.instance) {\n            AIService.instance = new AIService();\n        }\n        return AIService.instance;\n    }\n    async generateResponse(prompt) {\n        try {\n            const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${this.apiKey}`,\n                    'HTTP-Referer': 'https://danemarca-jobs.ro',\n                    'X-Title': 'Multi-Country EU Jobs Marketplace Agency'\n                },\n                body: JSON.stringify({\n                    model: this.model,\n                    messages: [\n                        {\n                            role: \"system\",\n                            content: `You are the virtual assistant for Europe's leading multi-industry recruitment platform, connecting Romanian professionals with premium opportunities across Construction, Healthcare, IT, Manufacturing, Logistics, Hospitality, and more.\n\n              Platform Overview:\n              - Multi-country EU job marketplace for Romanian citizens\n              - 5 key destinations: Denmark, Germany, Netherlands, France, and broader EU\n              - All industries: Construction, Healthcare, IT, Manufacturing, Logistics, Hospitality, Agriculture, Forestry, Transportation, Retail, and more\n              - AI-powered matching with 0-100 compatibility scores\n              - 15% agency commission with guaranteed placements\n              - Full relocation support (flights, housing, transport, registration)\n\n              Key Services:\n              1. **For Candidates**: CV evaluation, job matching, application tracking, relocation guidance\n              2. **For Agencies**: Lead generation, client management, revenue analytics, AI-powered tools\n              3. **For Employers**: Romanian talent acquisition, compliance support, cost-effective recruitment\n\n              Industries We Serve:\n              - Construction & Engineering (Denmark, Germany, Netherlands, France)\n              - Healthcare & Medical (Germany, Netherlands, France)\n              - IT & Technology (All countries, especially Netherlands and Germany)\n              - Manufacturing & Industry (Germany, Denmark)\n              - Logistics & Transportation (Netherlands, Germany)\n              - Hospitality & Services (France, Netherlands)\n              - Agriculture & Forestry (Denmark, Netherlands)\n\n              Salary Ranges (Monthly Gross):\n              - Construction: €2,800-€4,500\n              - Healthcare: €2,500-€4,000\n              - IT: €3,000-€6,000\n              - Manufacturing: €2,200-€3,800\n              - Logistics: €2,000-€3,500\n\n              EU Benefits:\n              - No work visas required for Romanians\n              - 25+ days annual leave\n              - Health insurance included\n              - Unemployment benefits\n              - Maternity/paternity leave (52 weeks)\n\n              Primary language: Romanian. Respond professionally and helpfully. Direct users to relevant sections and emphasize our multi-industry expertise and guaranteed placement success.`\n                        },\n                        {\n                            role: \"user\",\n                            content: prompt\n                        }\n                    ],\n                    max_tokens: 1000,\n                    temperature: 0.7\n                })\n            });\n            if (!response.ok) {\n                throw new Error(`OpenRouter API error: ${response.status} ${response.statusText}`);\n            }\n            const data = await response.json();\n            const content = data.choices?.[0]?.message?.content;\n            if (!content) {\n                throw new Error('No response content received');\n            }\n            return {\n                content: content,\n                success: true\n            };\n        } catch (error) {\n            console.error('AI Service Error:', error);\n            // Fallback to local responses if API fails\n            const fallbackResponse = this.generateFallbackResponse(prompt);\n            return {\n                content: fallbackResponse,\n                success: false,\n                error: error instanceof Error ? error.message : 'Unknown error'\n            };\n        }\n    }\n    generateFallbackResponse(message) {\n        const lowerMessage = message.toLowerCase();\n        if (lowerMessage.includes('cv') || lowerMessage.includes('evaluare') || lowerMessage.includes('resume')) {\n            return \"Pentru evaluarea CV-ului tău cu AI, accesează secțiunea 'Evaluare CV'. Analizăm automat compatibilitatea cu joburi din Construction, Healthcare, IT, Manufacturing, Logistics și Hospitality în Danemarca, Germania, Olanda, Franța. Oferim scor 0-100 și sugestii personalizate pentru toate industriile.\";\n        }\n        if (lowerMessage.includes('danemarca') || lowerMessage.includes('germania') || lowerMessage.includes('olanda') || lowerMessage.includes('franta') || lowerMessage.includes('europa')) {\n            return \"Găsești ghiduri complete în secțiunea 'Ghid Europa' pentru toate țările: Construction și Healthcare în Germania, IT și Logistics în Olanda, Manufacturing în Danemarca, Hospitality în Franța. Salarii competitive, suport relocare complet, fără vize pentru români.\";\n        }\n        if (lowerMessage.includes('locuri') || lowerMessage.includes('muncă') || lowerMessage.includes('job') || lowerMessage.includes('oportunități')) {\n            return \"Platforma noastră oferă joburi verificate în toate industriile: Construction (€2,800-€4,500), Healthcare (€2,500-€4,000), IT (€3,000-€6,000), Manufacturing (€2,200-€3,800), Logistics (€2,000-€3,500). Toate cu contracte UE-compliant și suport complet.\";\n        }\n        if (lowerMessage.includes('salariu') || lowerMessage.includes('bani') || lowerMessage.includes('plata') || lowerMessage.includes('salaries')) {\n            return \"Salariile competitive în toate industriile: Construction €2,800-4,500/lună, Healthcare €2,500-4,000, IT €3,000-6,000, Manufacturing €2,200-3,800, Logistics €2,000-3,500. Plus beneficii: 25+ zile vacanță, asigurare medicală, bonusuri performanță.\";\n        }\n        if (lowerMessage.includes('construcții') || lowerMessage.includes('construction') || lowerMessage.includes('building')) {\n            return \"Specialiști în construcții la mare căutare în Danemarca, Germania, Olanda, Franța. Salarii €2,800-4,500/lună + cazare + transport. Experiență în zidărie, sudură, instalații sanitare, electricitate foarte apreciată. Plasamente rapide garantate.\";\n        }\n        if (lowerMessage.includes('healthcare') || lowerMessage.includes('medical') || lowerMessage.includes('îngrijire') || lowerMessage.includes('sănătate')) {\n            return \"Oportunități excelente în domeniul sanitar: Germania și Franța oferă €2,500-4,000/lună pentru asistente medicale, îngrijitoare, farmaciști. Cerere mare, contracte stabile, training inclus. Suport pentru recunoașterea diplomelor.\";\n        }\n        if (lowerMessage.includes('it') || lowerMessage.includes('tech') || lowerMessage.includes('programare') || lowerMessage.includes('software')) {\n            return \"Sectorul IT în plină expansiune: Olanda și Germania oferă €3,000-6,000/lună pentru developeri, support IT, administratori sistem. Cerințe: engleză fluentă, experiență relevantă. Multe companii tech internaționale recrutează activ.\";\n        }\n        if (lowerMessage.includes('logistics') || lowerMessage.includes('transport') || lowerMessage.includes('warehouse')) {\n            return \"Logistică și transport: Olanda și Germania oferă €2,000-3,500/lună pentru șoferi, manipulanți marfă, coordonatori depozit. Permis conducere categoria B/C, engleză de bază. Program stabil, beneficii complete.\";\n        }\n        if (lowerMessage.includes('manufacturing') || lowerMessage.includes('producție') || lowerMessage.includes('fabrică')) {\n            return \"Industria manufacturing: Germania și Danemarca oferă €2,200-3,800/lună pentru operatori producție, controlori calitate, tehnicieni mentenanță. Experiență în producție un avantaj major. Contracte pe termen lung.\";\n        }\n        if (lowerMessage.includes('limbă') || lowerMessage.includes('language') || lowerMessage.includes('daneză') || lowerMessage.includes('germană')) {\n            return \"Cerințe lingvistice variază: IT și poziții specializate necesită engleză fluentă. Pentru construcții, manufacturing, logistică - engleză de bază (A2) suficientă. Oferim suport lingvistic gratuit și traduceri automate.\";\n        }\n        if (lowerMessage.includes('cazare') || lowerMessage.includes('locuință') || lowerMessage.includes('accommodation')) {\n            return \"Cazare asigurată de angajator în toate industriile: apartamente moderne, cămine muncitorești, case familiale. Cost lunar €400-800 deductibil din salariu. Multe companii oferă și masă și transport la locul de muncă.\";\n        }\n        if (lowerMessage.includes('transport') || lowerMessage.includes('deplasare') || lowerMessage.includes('relocation')) {\n            return \"Suport complet relocare: bilete avion plătite, transport local la sosire, ajutor cu actele administrative. Ca cetățean UE, procesul e rapid - doar înregistrare locală în 3-5 zile de la sosire.\";\n        }\n        if (lowerMessage.includes('documente') || lowerMessage.includes('acte') || lowerMessage.includes('documents')) {\n            return \"Documente necesare: pașaport valid, CV actualizat, diplome/certificări relevante. Pentru healthcare: recunoașterea calificărilor. Pentru transport: permis conducere internațional. Ghid complet în secțiunea 'Ghid Europa'.\";\n        }\n        if (lowerMessage.includes('agenție') || lowerMessage.includes('agency') || lowerMessage.includes('recruitment')) {\n            return \"Agenție multi-industrie completă: plasamente garantate în Construction, Healthcare, IT, Manufacturing, Logistics. Comision 15% doar la plasare reușită, AI lead scoring pentru companii, dashboard avansat pentru tracking și analytics.\";\n        }\n        return \"Te pot ajuta cu oportunități în Construction, Healthcare, IT, Manufacturing, Logistics, Hospitality și alte industrii din Danemarca, Germania, Olanda, Franța. Specifică industria și țara dorită pentru informații detaliate și oferte personalizate.\";\n    }\n    // Advanced AI Matching Engine\n    async calculateSmartMatch(candidateId, jobId) {\n        try {\n            // This would integrate with actual candidate and job data from database\n            const candidateData = await this.getCandidateData(candidateId);\n            const jobData = await this.getJobData(jobId);\n            // Generate embeddings for semantic matching\n            const candidateEmbedding = await this.generateEmbedding(candidateData.description);\n            const jobEmbedding = await this.generateEmbedding(jobData.description);\n            // Calculate similarity scores\n            const skillSimilarity = this.calculateCosineSimilarity(candidateEmbedding, jobEmbedding);\n            const experienceScore = this.scoreExperience(candidateData, jobData);\n            const locationScore = this.scoreLocation(candidateData, jobData);\n            const culturalFit = this.scoreCulturalFit(candidateData, jobData);\n            const languageScore = this.scoreLanguageCompatibility(candidateData, jobData);\n            const salaryFit = this.scoreSalaryExpectations(candidateData, jobData);\n            // Machine learning prediction of success rate\n            const successPrediction = this.predictPlacementSuccess({\n                skillSimilarity,\n                experienceScore,\n                locationScore,\n                culturalFit,\n                languageScore,\n                salaryFit\n            });\n            // Overall weighted score\n            const overallScore = Math.round(skillSimilarity * 0.25 + experienceScore * 0.20 + locationScore * 0.15 + culturalFit * 0.15 + languageScore * 0.15 + salaryFit * 0.10);\n            return {\n                candidateId,\n                jobId,\n                overallScore: Math.min(100, Math.max(0, overallScore)),\n                skillMatch: skillSimilarity,\n                experienceMatch: experienceScore,\n                locationCompatibility: locationScore,\n                culturalFit,\n                languageCompatibility: languageScore,\n                salaryExpectations: salaryFit,\n                successPrediction,\n                recommendations: this.generateMatchRecommendations(overallScore, candidateData, jobData),\n                redFlags: this.identifyRedFlags(candidateData, jobData)\n            };\n        } catch (error) {\n            console.error('Smart Match Error:', error);\n            // Fallback match\n            return {\n                candidateId,\n                jobId,\n                overallScore: 50,\n                skillMatch: 50,\n                experienceMatch: 50,\n                locationCompatibility: 50,\n                culturalFit: 50,\n                languageCompatibility: 50,\n                salaryExpectations: 50,\n                successPrediction: 50,\n                recommendations: [\n                    'Fallback matching - needs review'\n                ]\n            };\n        }\n    }\n    // AI-Powered Lead Scoring for Companies\n    async scoreLead(companyId) {\n        try {\n            const companyData = await this.getCompanyData(companyId);\n            // Analyze company financial indicators\n            const financialHealth = await this.analyzeFinancialHealth(companyData);\n            // Assess hiring urgency from job postings and website\n            const hiringUrgency = await this.analyzeWebsiteForUrgency(companyData);\n            // Evaluate relocation support capabilities\n            const relocationSupport = this.evaluateRelocationSupport(companyData);\n            // Analyze communication quality\n            const communicationScore = this.analyzeCommunicationQuality(companyData);\n            // Industry and size compatibility with Romanian talent\n            const industryMatch = this.scoreIndustryCompatibility(companyData);\n            const sizeCompatibility = this.scoreCompanySize(companyData);\n            // Overall AI-driven score\n            const overallFit = Math.round(financialHealth * 0.25 + hiringUrgency * 0.20 + relocationSupport * 0.20 + communicationScore * 0.15 + industryMatch * 0.10 + sizeCompatibility * 0.10);\n            return {\n                companyId,\n                overallFit: Math.min(100, Math.max(0, overallFit)),\n                financialHealth,\n                hiringUrgency,\n                relocationSupport,\n                communicationScore,\n                industryMatch,\n                sizeCompatibility,\n                reasons: this.generateLeadScoreReasons({\n                    financialHealth,\n                    hiringUrgency,\n                    relocationSupport,\n                    communicationScore,\n                    industryMatch,\n                    sizeCompatibility\n                })\n            };\n        } catch (error) {\n            console.error('Lead Scoring Error:', error);\n            return {\n                companyId,\n                overallFit: 50,\n                financialHealth: 50,\n                hiringUrgency: 50,\n                relocationSupport: 50,\n                communicationScore: 50,\n                industryMatch: 50,\n                sizeCompatibility: 50,\n                reasons: [\n                    'Score calculated with limited data'\n                ]\n            };\n        }\n    }\n    // Advanced CV Analysis with AI\n    async analyzeCV(content, country) {\n        try {\n            const prompt = `\n        Analyze this CV/resume content and provide a structured assessment for European job market compatibility.\n        Focus on: ${country ? `compatibility with ${country}` : 'European job market'}\n\n        CV Content:\n        ${content}\n\n        Provide analysis in this exact JSON format:\n        {\n          \"skills\": [\"skill1\", \"skill2\", ...],\n          \"experience\": [\"exp1\", \"exp2\", ...],\n          \"education\": [\"edu1\", \"edu2\", ...],\n          \"languages\": {\"romanian\": \"native\", \"english\": \"intermediate\"},\n          \"certifications\": [\"cert1\", \"cert2\", ...],\n          \"score\": 85,\n          \"recommendations\": [\"rec1\", \"rec2\", ...],\n          \"jobCompatibility\": {\"general_labour\": 90, \"skilled_trades\": 75, \"management\": 60}\n        }\n      `;\n            const response = await this.generateResponse(prompt);\n            if (response.success) {\n                const parsedAnalysis = JSON.parse(response.content);\n                return {\n                    skills: parsedAnalysis.skills || [],\n                    experience: parsedAnalysis.experience || [],\n                    education: parsedAnalysis.education || [],\n                    languages: parsedAnalysis.languages || {},\n                    certifications: parsedAnalysis.certifications || [],\n                    score: Math.min(100, Math.max(0, parsedAnalysis.score || 50)),\n                    recommendations: parsedAnalysis.recommendations || [],\n                    jobCompatibility: parsedAnalysis.jobCompatibility || {}\n                };\n            } else {\n                throw new Error('AI analysis failed');\n            }\n        } catch (error) {\n            console.error('CV Analysis Error:', error);\n            // Fallback basic analysis\n            return {\n                skills: [],\n                experience: [],\n                education: [],\n                languages: {},\n                certifications: [],\n                score: 60,\n                recommendations: [\n                    'Upload a complete CV for detailed AI analysis'\n                ],\n                jobCompatibility: {\n                    general_labour: 70,\n                    skilled_trades: 65,\n                    management: 55\n                }\n            };\n        }\n    }\n    // Predictive Analytics for Placement Success\n    async predictSuccessRate(match, historicalData) {\n        try {\n            // This would use ML models trained on placement data\n            const weightFactors = {\n                overallScore: 0.30,\n                skillMatch: 0.25,\n                experienceMatch: 0.20,\n                locationCompatibility: 0.10,\n                culturalFit: 0.10,\n                languageCompatibility: 0.05\n            };\n            let successRate = match.overallScore * weightFactors.overallScore + match.skillMatch * weightFactors.skillMatch + match.experienceMatch * weightFactors.experienceMatch + match.locationCompatibility * weightFactors.locationCompatibility + match.culturalFit * weightFactors.culturalFit + match.languageCompatibility * weightFactors.languageCompatibility;\n            // Apply historical adjustment if available\n            if (historicalData) {\n                const historicalAdjustment = this.calculateHistoricalAdjustment(match, historicalData);\n                successRate = successRate * 0.8 + historicalAdjustment * 0.2;\n            }\n            return Math.min(100, Math.max(0, Math.round(successRate)));\n        } catch (error) {\n            console.error('Success Prediction Error:', error);\n            return 50 // Neutral fallback\n            ;\n        }\n    }\n    // Helper Methods for AI Calculations\n    async generateEmbedding(text) {\n        // Placeholder: In production, call OpenRouter embedding API\n        // For now, return mock vector based on text length for consistency\n        const seed = text.length + text.split(' ').length;\n        const random = seed * 0.01;\n        return Array.from({\n            length: 1536\n        }, (_, i)=>Math.sin((i + seed) * random) * 2 - 1);\n    }\n    calculateCosineSimilarity(vecA, vecB) {\n        if (vecA.length !== vecB.length) return 50;\n        let dotProduct = 0;\n        let normA = 0;\n        let normB = 0;\n        for(let i = 0; i < vecA.length; i++){\n            dotProduct += vecA[i] * vecB[i];\n            normA += vecA[i] * vecA[i];\n            normB += vecB[i] * vecB[i];\n        }\n        if (normA === 0 || normB === 0) return 50;\n        return Math.round((dotProduct / (Math.sqrt(normA) * Math.sqrt(normB)) * 0.5 + 0.5) * 100);\n    }\n    scoreExperience(candidate, job) {\n        // Complex experience scoring logic\n        const candidateExp = candidate.experienceYears || 0;\n        const jobExp = job.experienceRequired || 0;\n        if (candidateExp >= jobExp) return 100;\n        if (candidateExp >= jobExp * 0.8) return 80;\n        if (candidateExp >= jobExp * 0.5) return 60;\n        return Math.max(20, candidateExp / jobExp * 100);\n    }\n    scoreLocation(candidate, job) {\n        // Evaluate willingness to relocate, transportation costs, etc.\n        if (!candidate.willingToRelocate && job.country !== candidate.currentCountry) return 30;\n        if (job.country === candidate.currentCountry) return 100;\n        return 85 // Assuming willingness to relocate for better opportunities\n        ;\n    }\n    scoreCulturalFit(candidate, job) {\n        // This would analyze cultural indicators\n        let score = 70 // Base score\n        ;\n        // Adjust based on personality traits vs company culture\n        if (candidate.workingPatterns === job.workCulture) score += 20;\n        if (candidate.motivationAlignment === job.companyValues) score += 10;\n        return Math.min(100, Math.max(40, score));\n    }\n    scoreLanguageCompatibility(candidate, job) {\n        // Language requirements scoring\n        const market = this.europeanMarkets[job.country?.toLowerCase()];\n        if (!market) return 70;\n        const requiredLanguage = job.requiredLanguage || 'english';\n        const candidateLevels = candidate.languages || {};\n        const level = candidateLevels[requiredLanguage]?.toLowerCase();\n        switch(level){\n            case 'native':\n                return 100;\n            case 'fluent':\n            case 'proficient':\n                return 90;\n            case 'advanced':\n                return 85;\n            case 'intermediate':\n                return 70;\n            case 'basic':\n                return market.languageImportance === 'high' ? 40 : 60;\n            default:\n                return 50;\n        }\n    }\n    scoreSalaryExpectations(candidate, job) {\n        const candidateSalary = candidate.expectedSalary || 2000;\n        const jobSalary = job.offeredSalary || 2500;\n        if (candidateSalary <= jobSalary) return 100;\n        if (candidateSalary <= jobSalary * 1.2) return 80;\n        if (candidateSalary <= jobSalary * 1.5) return 60;\n        return Math.max(20, jobSalary / candidateSalary * 100);\n    }\n    predictPlacementSuccess(factors) {\n        // ML-based prediction algorithm\n        const { skillSimilarity, experienceScore, locationScore, culturalFit, languageScore, salaryFit } = factors;\n        // Weighted prediction algorithm\n        return Math.round(skillSimilarity * 0.25 + experienceScore * 0.25 + culturalFit * 0.2 + languageScore * 0.15 + locationScore * 0.1 + salaryFit * 0.05);\n    }\n    generateMatchRecommendations(score, candidate, job) {\n        const recommendations = [];\n        if (score < 60) {\n            recommendations.push('Consider skill development or additional training');\n            if (job.experienceRequired > candidate.experienceYears) {\n                recommendations.push('Build more experience before applying');\n            }\n        } else if (score < 80) {\n            recommendations.push('Strong candidate - consider for interview');\n            recommendations.push('Language training may improve success rate');\n        } else {\n            recommendations.push('Excellent match - prioritize this candidate');\n            recommendations.push('Fast-track to interview process');\n        }\n        return recommendations;\n    }\n    identifyRedFlags(candidate, job) {\n        const flags = [];\n        if (candidate.expectedSalary > job.offeredSalary * 1.5) {\n            flags.push('Salary expectations significantly higher than offered');\n        }\n        if (!candidate.willingToRelocate && job.country !== candidate.currentCountry) {\n            flags.push('Not willing to relocate');\n        }\n        if (job.experienceRequired > candidate.experienceYears * 1.5) {\n            flags.push('Significant experience gap');\n        }\n        return flags;\n    }\n    // Helper methods for data access (would integrate with database)\n    async getCandidateData(id) {\n        // Placeholder - would access actual database\n        return {\n            id,\n            experienceYears: 2,\n            willingToRelocate: true,\n            currentCountry: 'RO'\n        };\n    }\n    async getJobData(id) {\n        // Placeholder - would access actual database\n        return {\n            id,\n            experienceRequired: 1,\n            country: 'DK',\n            offeredSalary: 2500\n        };\n    }\n    async getCompanyData(id) {\n        // Placeholder - would access actual database\n        return {\n            id,\n            website: '',\n            industry: 'agriculture',\n            size: 'medium'\n        };\n    }\n    async analyzeFinancialHealth(company) {\n        // Placeholder: Analyze based on company data\n        return company.revenue ? Math.min(100, Math.max(0, company.revenue / 1000000 * 20)) : 50;\n    }\n    async analyzeWebsiteForUrgency(company) {\n        // Placeholder: Check for urgency indicators\n        return company.openPositions > 5 ? 80 : 50;\n    }\n    analyzeCommunicationQuality(company) {\n        // Placeholder: Score based on response quality\n        return company.emailResponseTime ? company.emailResponseTime < 24 ? 90 : 60 : 70;\n    }\n    evaluateRelocationSupport(company) {\n        // Evaluate company's relocation support capabilities\n        let score = 50; // Base score\n        if (company.offersRelocation) score += 25;\n        if (company.providesHousing) score += 15;\n        if (company.helpsWithVisa) score += 10;\n        if (company.transportSupport) score += 10;\n        if (company.languageTraining) score += 5;\n        return Math.min(100, Math.max(0, score));\n    }\n    scoreIndustryCompatibility(company) {\n        // Check if industry is suitable for Romanian recruitment\n        const suitableIndustries = [\n            'agriculture',\n            'forestry',\n            'manufacturing',\n            'construction'\n        ];\n        return suitableIndustries.includes(company.industry?.toLowerCase()) ? 90 : 70;\n    }\n    scoreCompanySize(company) {\n        // Medium/large companies are preferable for Romanian hires\n        const sizeScores = {\n            small: 70,\n            medium: 85,\n            large: 95\n        };\n        return sizeScores[company.size] || 75;\n    }\n    generateLeadScoreReasons(scores) {\n        const reasons = [];\n        if (scores.financialHealth > 80) reasons.push('Strong financial position');\n        if (scores.hiringUrgency > 80) reasons.push('Active hiring needs');\n        if (scores.relocationSupport > 80) reasons.push('Good relocation support');\n        if (scores.industryMatch > 80) reasons.push('Industry fits Romanian talent');\n        return reasons;\n    }\n    calculateHistoricalAdjustment(match, history) {\n        // Analyze historical placement data for similar matches\n        const similarMatches = history.filter((h)=>Math.abs(h.overallScore - match.overallScore) < 10);\n        if (similarMatches.length === 0) return 50;\n        const avgSuccess = similarMatches.reduce((sum, h)=>sum + h.actualSuccess, 0) / similarMatches.length;\n        return avgSuccess;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/ai-service.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2Fhome%2Fshiva%2FDocuments%2Fromanian_danish_jobs%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fshiva%2FDocuments%2Fromanian_danish_jobs&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2Fhome%2Fshiva%2FDocuments%2Fromanian_danish_jobs%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fshiva%2FDocuments%2Fromanian_danish_jobs&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _home_shiva_Documents_romanian_danish_jobs_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/chat/route.ts */ \"(rsc)/./app/api/chat/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/chat/route\",\n        pathname: \"/api/chat\",\n        filename: \"route\",\n        bundlePath: \"app/api/chat/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"/home/shiva/Documents/romanian_danish_jobs/app/api/chat/route.ts\",\n    nextConfigOutput,\n    userland: _home_shiva_Documents_romanian_danish_jobs_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/chat/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        if (!(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2Fhome%2Fshiva%2FDocuments%2Fromanian_danish_jobs%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fshiva%2FDocuments%2Fromanian_danish_jobs&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!*********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \*********************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!*********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \*********************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1"], () => (__webpack_exec__("(rsc)/./node_modules/.pnpm/next@15.5.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2Fhome%2Fshiva%2FDocuments%2Fromanian_danish_jobs%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fshiva%2FDocuments%2Fromanian_danish_jobs&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();