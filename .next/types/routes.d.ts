// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/[locale]" | "/[locale]/admin" | "/[locale]/admin/ai-tasks" | "/[locale]/admin/jobs" | "/[locale]/admin/scraper" | "/[locale]/admin/settings" | "/[locale]/admin/users" | "/[locale]/contact" | "/[locale]/evaluare-cv" | "/[locale]/ghid-europa" | "/[locale]/learn/danish" | "/[locale]/locuri-verificate" | "/admin" | "/admin/analytics" | "/admin/jobs" | "/admin/logs" | "/admin/scraper" | "/admin/users" | "/agency" | "/contact"
type AppRouteHandlerRoutes = "/api/admin/ai-tasks/process" | "/api/admin/analytics" | "/api/admin/jobs" | "/api/admin/logs" | "/api/admin/scraper/jobs" | "/api/admin/scraper/start" | "/api/admin/settings" | "/api/admin/stats" | "/api/admin/users" | "/api/agency/clients" | "/api/agency/dashboard" | "/api/agency/leads" | "/api/agency/placements" | "/api/ai/lead-scoring" | "/api/ai/smart-match" | "/api/auth/[...nextauth]" | "/api/chat" | "/api/contact" | "/api/flashcards" | "/api/n8n-automation" | "/api/outreach" | "/api/scrape-danish-farms" | "/api/signup"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/[locale]": { "locale": string; }
  "/[locale]/admin": { "locale": string; }
  "/[locale]/admin/ai-tasks": { "locale": string; }
  "/[locale]/admin/jobs": { "locale": string; }
  "/[locale]/admin/scraper": { "locale": string; }
  "/[locale]/admin/settings": { "locale": string; }
  "/[locale]/admin/users": { "locale": string; }
  "/[locale]/contact": { "locale": string; }
  "/[locale]/evaluare-cv": { "locale": string; }
  "/[locale]/ghid-europa": { "locale": string; }
  "/[locale]/learn/danish": { "locale": string; }
  "/[locale]/locuri-verificate": { "locale": string; }
  "/admin": {}
  "/admin/analytics": {}
  "/admin/jobs": {}
  "/admin/logs": {}
  "/admin/scraper": {}
  "/admin/users": {}
  "/agency": {}
  "/api/admin/ai-tasks/process": {}
  "/api/admin/analytics": {}
  "/api/admin/jobs": {}
  "/api/admin/logs": {}
  "/api/admin/scraper/jobs": {}
  "/api/admin/scraper/start": {}
  "/api/admin/settings": {}
  "/api/admin/stats": {}
  "/api/admin/users": {}
  "/api/agency/clients": {}
  "/api/agency/dashboard": {}
  "/api/agency/leads": {}
  "/api/agency/placements": {}
  "/api/ai/lead-scoring": {}
  "/api/ai/smart-match": {}
  "/api/auth/[...nextauth]": { "nextauth": string[]; }
  "/api/chat": {}
  "/api/contact": {}
  "/api/flashcards": {}
  "/api/n8n-automation": {}
  "/api/outreach": {}
  "/api/scrape-danish-farms": {}
  "/api/signup": {}
  "/contact": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
